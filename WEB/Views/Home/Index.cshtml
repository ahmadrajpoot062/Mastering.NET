@{
    ViewData["Title"] = "Home Page";
}

@model TCPViewModel

@section Styles {
    <style>
        .offcanvas-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .add-tutorial-icon {
            font-size: 20px;
            cursor: pointer;
        }

        .upload-pdf-icon {
            margin-left: auto;
            font-size: 16px;
            cursor: pointer;
        }

        .add-tutorial-icon,
        .upload-pdf-icon {
            color: #388DA8;
        }

            .add-tutorial-icon:hover,
            .upload-pdf-icon:hover {
                color: #277080;
            }

        .dropdown-toggle {
            max-width: calc(100% - 2rem);
            /* Adjust based on space needed for the delete icon */
            display: block;
            word-wrap: break-word;
        }

        .delete-icon, .delete-tutorial-icon {
            margin-left: auto;
            /* Pushes the icon to the right */
        }

        .bullet-icon {
            color: #75B3C9;
            /* Adjust the color as needed */
        }

        .dropdown-toggle {
            max-width: calc(100% - 2rem);
            /* Adjust based on space needed for the delete icon */
            display: block;
            word-wrap: break-word;
        }

        .card {
            border-radius: 10px;
        }

        .card-header {
            font-weight: bold;
            padding: 15px;
        }

        .card-body {
            padding: 20px;
        }

        .card-subtitle {
            margin-bottom: 15px;
        }

          .custom-offcanvas-width {
            width: 25%; /* Set the default width to 25% */
          }

          /* Adjust for smaller screens */
          @@media (max-width: 576px) {
            .custom-offcanvas-width {
              width: 80%; /* Adjust the width for extra small screens */
            }
          }

          @@media (min-width: 577px) and (max-width: 768px) {
            .custom-offcanvas-width {
              width: 60%; /* Adjust the width for small screens */
            }
          }

          @@media (min-width: 769px) and (max-width: 992px) {
            .custom-offcanvas-width {
              width: 40%; /* Adjust the width for medium screens */
            }
          }

    </style>
}

<!-- Offcanvas for Tutorials -->
<div class="offcanvas offcanvas-start custom-offcanvas-width" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions"
     aria-labelledby="offcanvasWithBothOptionsLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title text-white fw-bold" id="offcanvasWithBothOptionsLabel">Topics</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    @if (User.Identity.Name == "admin231@gmail.com")
    {
        <!-- Icon for adding new tutorials -->
        <div class="d-flex justify-content-end pe-3">
            <button type="button" class="btn btn-link add-tutorial-icon" data-bs-toggle="modal"
                    data-bs-target="#addTutorialModal" data-current-page="@ViewBag.CurrentPage">
                <i class="bi bi-plus-circle fs-2" title="Add new Topic"></i>
            </button>
        </div>
    }
    <!-- Scrollable Offcanvas Body -->
    <div id="offCanvasDiv" class="offcanvas-body overflow-auto">
        <partial name="_OffCanvasPartial" model="Model.Topic" />
    </div>
</div>



<!-- Modal for adding new tutorials -->
<div class="modal fade" id="addTutorialModal" tabindex="-1" aria-labelledby="addTutorialModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTutorialModalLabel">Add New Tutorial</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="currentPage" value="" /> <!-- The value will be set by JavaScript -->

                    <div class="mb-3 mt-3">
                        <label for="tutorialName" class="form-label">Tutorial Name</label>
                        <input type="text" class="form-control" id="tutorialName" placeholder="Enter tutorial name" required>
                    </div>
                    <div class="d-flex justify-content-center">
                        <button type="button" onclick="addTutorial();" class="btn text-white w-50 mt-4" style="background-color: #559DB4;">
                            Add Tutorial
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Modal for adding new Projects -->
<div class="modal fade" id="addProjectModal" tabindex="-1" aria-labelledby="addProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProjectModalLabel">Add New Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addProjectForm" enctype="multipart/form-data">
                    <input type="hidden" id="currentProjectPage" value="" /> <!-- The value will be set by JavaScript -->
                    <div class="mb-3">
                        <label for="projectTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="projectTitle" name="projectTitle" placeholder="Enter project title" required>
                    </div>
                    <div class="mb-3">
                        <label for="projectDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="projectDescription" name="projectDescription" rows="4" placeholder="Enter project description" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="gitHubLink" class="form-label">Link</label>
                        <input type="url" class="form-control" id="gitHubLink" name="gitHubLink" placeholder="Enter GitHub link" required>
                    </div>
                    <div class="mb-3">
                        <label for="projectImages" class="form-label">Upload Project Images</label>
                        <input type="file" class="form-control" id="projectImages" name="projectImages" accept="image/*" multiple required>
                        <small class="form-text text-muted">You can upload multiple images (JPEG, PNG, etc.).</small>
                    </div>
                    <div class="d-flex justify-content-center">
                        <button type="button" onclick="addProject();" class="btn text-white w-50 mt-4" style="background-color: #559DB4;">
                            Add Project
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Delete Topic Modal -->
<div class="modal fade" id="confirmDeleteTutorialModal" tabindex="-1" aria-labelledby="confirmDeleteTutorialModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteTutorialModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this Tutorial?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary w-25" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger w-25" id="confirmDeleteTutorialButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Sure Modal for deleting Project -->
<div class="modal fade" id="SureModal" tabindex="-1" aria-labelledby="SureModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="SureModalLabel">Are you sure?</h1>
            </div>
            <div class="modal-body">
                <!-- This paragraph will be updated dynamically -->
                <p class="mb-4">Do you want to delete the project <strong id="modalProjectTitle"></strong>?</p>
                <!-- Call deleteProject when clicking Yes -->
                <button id="confirmDeleteProjectButton" class="btn btn-primary text-white border w-25">Yes</button>
                <button type="button" class="btn btn-danger text-white w-25" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>


<main class="main">

    <!-- Hero Section -->
    <section id="hero" class="hero section ">
        <div class="hero-bg">
            <img src="~/assets/img/hero-bg-light.webp" alt="">
        </div>
        <div class="container text-center">
            <div class="d-flex flex-column justify-content-center align-items-center">
                <h1 data-aos="fade-up">Welcome to <span>Mastering .NET</span></h1>
                <p data-aos="fade-up" data-aos-delay="100">Quickly learn .NET now with ease!<i class="bi bi-hand-thumbs-up ms-1"></i><br></p>
            </div>
        </div>

    </section><!-- /Hero Section -->

    <!--Topics Section-->

        <!-- Section Title -->
        <div class="container section-title mt-5" data-aos="fade-up">
            <h2>.NET Topics</h2>           
        </div>
        <!-- End Section Title -->

        <div id="allTopicsDiv">
            <partial name="_allTopicsPartial" model="Model.PaginatedTopics" />
        </div>

    <!--Topics Section-->


    <!--Projects Section-->

        <!-- Section Title -->
        <div class="container section-title mt-5" data-aos="fade-up">
            <h2>.NET Projects</h2>
        </div>
        <!-- End Section Title -->

        <div id="allProjectsDiv">
            <partial name="_allProjectsPartial" model="Model.PaginatedProjects" />  
        </div>

    <!--Projects Section-->


    <!-- About Section -->
    <section id="about" class="about section">

        <div class="container">

            <div class="row gy-4">

                <div class="col-lg-6 content" data-aos="fade-up" data-aos-delay="100">
                    <p class="who-we-are">Who We Are</p>
                    <h3>Empowering Developers with .NET Mastery</h3>
                    <p class="fst-italic">
                        Dive deep into ASP.NET and .NET technologies to build robust, scalable, and secure applications. Whether
                        you're a beginner or a seasoned developer, our platform offers a wealth of knowledge to elevate your
                        coding skills.
                    </p>
                    <p>
                        ASP.NET, a versatile framework developed by Microsoft, provides developers with the tools to create
                        dynamic web applications, APIs, and services. With our learning resources, you can unlock the full
                        potential of ASP.NET and explore its powerful features, including MVC, Razor Pages, and Web API.
                    </p>
                    <ul>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Comprehensive tutorials on Dapper for efficient data
                                access.
                            </span>
                        </li>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Master Generic Repository patterns to streamline your
                                codebase.
                            </span>
                        </li>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Implement Identity for secure authentication and
                                authorization.
                            </span>
                        </li>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Integrate real-time functionalities with SignalR for
                                responsive applications.
                            </span>
                        </li>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Architect your applications using Clean Architecture
                                principles for maintainable and testable code.
                            </span>
                        </li>
                        <li>
                            <i class="bi bi-check-circle"></i> <span>
                                Explore the latest updates in .NET and ASP.NET Core, ensuring
                                your skills stay current.
                            </span>
                        </li>
                    </ul>
                    <p>
                        Our mission is to equip developers with the knowledge and tools they need to create modern,
                        high-performance applications. Join us on a journey through the world of .NET, where learning never stops,
                        and innovation is just a step away.
                    </p>

                </div>

                <div class="col-lg-6 about-images d-flex align-items-center" data-aos="fade-up" data-aos-delay="200">
                    <div class="row gy-4">
                        <div class="col-lg-6 d-flex align-items-center">
                            <img src="~/assets/img/about-company-1.jpg" class="img-fluid h-100" alt="" style="object-fit: contain;">
                        </div>
                        <div class="col-lg-6">
                            <div class="row gy-4">
                                <div class="col-lg-12 d-flex align-items-center">
                                    <img src="~/assets/img/about-company-2.jpg" class="img-fluid" alt="">
                                </div>
                                <div class="col-lg-12 d-flex align-items-center">
                                    <img src="~/assets/img/about-company-3.jpg" class="img-fluid" alt="">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </section><!-- /About Section -->

    <!-- Contact Section -->
    <section id="contact" class="contact section mt-2">

        <!-- Section Title -->
        <div class="container section-title" data-aos="fade-up">
            <h2>Contact</h2>
            <p>Feel free to reach out for any inquiries regarding .NET, Big Data, Cloud Computing, or Machine Learning.</p>
            <p>I'm here to assist you with your technical learning journey!</p>
        </div><!-- End Section Title -->


        <div class="container" data-aos="fade-up" data-aos-delay="100">

            <div class="row gy-4">

                <div class="col-lg-6">
                    <div class="info-item d-flex flex-column justify-content-center align-items-center" data-aos="fade-up"
                         data-aos-delay="200">
                        <i class="bi bi-envelope"></i>
                        <a href="mailto:shuja@pucit.edu.pk" class="mt-2 text-decoration-none">shuja@pucit.edu.pk</a>
                    </div>
                </div><!-- End Info Item -->

                <div class="col-lg-3 col-md-6">
                    <div class="info-item d-flex flex-column justify-content-center align-items-center" data-aos="fade-up"
                         data-aos-delay="300">
                        <i class="bi bi-linkedin"></i>
                        <a href="https://www.linkedin.com/in/shujamughal/" class="mt-2" target="_blank">View LinkedIn</a>
                    </div>
                </div><!-- End Info Item -->

                <div class="col-lg-3 col-md-6">
                    <div class="info-item d-flex flex-column justify-content-center align-items-center" data-aos="fade-up"
                         data-aos-delay="400">
                        <i class="bi bi-facebook"></i>
                        <a href="https://www.facebook.com/shujamughal" class="mt-2" target="_blank">Visit Facebook</a>
                    </div>
                </div><!-- End Info Item -->

            </div>

            <div class="row gy-4 mt-1">
                <div class="col-lg-6" data-aos="fade-up" data-aos-delay="300">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3399.316627966318!2d74.30704911009545!3d31.570364044564617!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39191ca7d960f837%3A0xc0bb6ddf0568a651!2sPunjab%20University%20College%20of%20Information%20Technology%20Old%20Campus!5e0!3m2!1sen!2s!4v1725917891907!5m2!1sen!2s"
                            width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy"
                            referrerpolicy="no-referrer-when-downgrade"></iframe>

                </div><!-- End Google Maps -->

                <div class="col-lg-6">
                    @{
                        // Retrieve the logged-in user's email
                        var userEmail = User.Identity?.Name; // Or however you retrieve the user's email
                        var isAdmin = userEmail == "admin231@gmail.com"; // Check if the current user is the admin
                    }

                    <form id="sendMessageForm" method="post" class="php-email-form" data-aos="fade-up" data-aos-delay="400">

                        @Html.AntiForgeryToken() <!-- CSRF Protection -->

                        <div class="row gy-4">
                            <div class="col-md-6">
                                <input type="text" id="name" name="name" class="form-control" placeholder="Your Name" required="" @(isAdmin ? "disabled" : "")>
                            </div>
                            <div class="col-md-6">
                                <input type="email" id="email" name="email" class="form-control" placeholder="Your Email" required="" @(isAdmin ? "disabled" : "")>

                            </div>
                            <div class="col-md-12">
                                <input type="text" id="subject" name="subject" class="form-control" placeholder="Subject" required="" @(isAdmin ? "disabled" : "")>
                            </div>
                            <div class="col-md-12">
                                <textarea class="form-control" id="message" name="message" rows="6" placeholder="Message" required="" @(isAdmin ? "disabled" : "")></textarea>
                            </div>
                            <div class="col-md-12 text-center">
                                <button type="button" class="btn btn-sendMessage" onclick="sendMessage()" @(isAdmin ? "disabled" : "")>
                                    Send Message
                                </button>
                            </div>
                        </div>
                    </form>

                </div><!-- End Contact Form -->

            </div>

            @if (User.Identity.Name == "admin231@gmail.com")
            {
                <div class="row gy-4 mt-1">
                    <!-- Pass the contacts from the first item of the model to the partial view -->
                    <partial name="_sendMessagesPartial" model="Model.Contacts" />
                </div>
            }

        </div>

    </section><!-- /Contact Section -->

</main>

@section Scripts {

    <script>
        // JavaScript/jQuery to set the current page value when the modal is shown
        $('#addTutorialModal').on('show.bs.modal', function (event) {
            // Get the button that triggered the modal
            var button = $(event.relatedTarget);

            // Get the data-current-page attribute value
            var currentPage = button.data('current-page');

            // Set the value to the hidden input field inside the modal
            var modal = $(this);
            modal.find('#currentPage').val(currentPage);
        });
    </script>      

    <script>
        function addTutorial() {
            var name = $('#tutorialName').val();
            var currentPage = $('#currentPage').val(); // Get current page from hidden field

            $.ajax({
                type: "POST", // HTTP method
                url: "/Admin/AddTutorial", // URL to send the request to
                data: { tutorialName: name }, // Data to send

                success: function (result) {
                    // Update the offcanvas with new content (the updated list of topics and lectures)
                    $('#offCanvasDiv').html(result).fadeIn('slow');

                    // Call the function to update the topic navbar
                    topicNavBarUpdate();

                    loadPage(currentPage);

                    // Close the modal after successful tutorial addition
                    $('#addTutorialModal').modal('hide'); // Close the modal

                    // Optionally, clear the input field for tutorial name
                    $('#tutorialName').val('');
                },
                error: function () {
                    alert('Failed to Add Tutorial.');
                }
            });
        }
    </script>

    <script>
        function loadPage(pageNumber) {
            $.ajax({
                url: '@Url.Action("topicsPartialViewUpdate", "Home")',
                type: 'GET',
                data: { page: pageNumber },
                success: function (result) {
                    $('#allTopicsDiv').html(result);
                },
                error: function () {
                    alert('Error loading topics.');
                }
            });
        }
    </script>

    <script>
        // JavaScript/jQuery to set the current project page value when the modal is shown
        $('#addProjectModal').on('show.bs.modal', function (event) {
            // Get the button that triggered the modal
            var button = $(event.relatedTarget);

            // Get the data-currentProject-page attribute value from the button
            var currentPage = button.data('currentproject-page');

            // Set the value to the hidden input field inside the modal
            var modal = $(this);
            modal.find('#currentProjectPage').val(currentPage);
        });

    </script>

    <script>
        function addProject() {
            // Create FormData object to collect form data, including files
            var formData = new FormData(document.getElementById("addProjectForm"));

            var currentProjectPage = $('#currentProjectPage').val();

            $.ajax({
                url: '/Admin/AddProject', // URL of the action method
                type: 'POST',
                data: formData,
                contentType: false, // Required for file upload
                processData: false, // Prevent jQuery from processing the data
                success: function () {

                    loadProjectPage(currentProjectPage);

                    // Optionally, close the modal after success
                    $('#addProjectModal').modal('hide');

                    // Clear the form
                    $('#addProjectForm')[0].reset();
                },
                error: function (xhr, status, error) {
                    // Error handling
                    console.log("Error: " + error);
                }
            });
        }

    </script>

    <script>
        function loadProjectPage(pageNumber) {
            $.ajax({
                url: '@Url.Action("ProjectsPartialViewUpdate", "Home")',
                type: 'GET',
                data: { page: pageNumber },
                success: function (result) {
                    $('#allProjectsDiv').html(result);
                },
                error: function () {
                    alert('Error loading Projects.');
                }
            });
        }
    </script>

    <script>
        function topicNavBarUpdate() {
            $.ajax({
                type: "GET", // HTTP method
                url: "/Home/topicNavBarUpdate", // URL to send the request to
                success: function (result) {
                    // Update the topic navbar with new content
                    $('#topic-wrapper').html(result).fadeIn('slow');
                    checkOverflow();
                },
                error: function () {
                    alert('Failed to Update Topic Navbar.');
                }
            });
        }
    </script>

    <script>
        function sendMessage() {
            // Create a FormData object from the form
            var formData = new FormData(document.getElementById("sendMessageForm"));

            // Send the form data via AJAX to the server
            fetch('/Home/sendMessage', {
                method: 'POST',
                body: new URLSearchParams(formData)
            })
                .then(response => {
                    if (response.ok) {
                        // Display success alert
                        alert("Your message has been successfully sent!");

                        // Optionally, clear the form
                        document.getElementById("sendMessageForm").reset();
                    } else {
                        // Display error alert
                        alert("There was an error submitting your message.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("There was an error submitting your message.");
                });
        }
    </script>

    <script>
        let tutorialIdToDelete = null; // Variable to store the lecture ID

        // Use event delegation to handle dynamically added elements
        $(document).on('click', '.delete-tutorial-icon', function () {
            tutorialIdToDelete = $(this).data('tutorial-id'); // Store the tutorial ID
            currentPage = $(this).data('current-page');
            topicCount = $(this).data('topiccount');
        });
       
        // When the Delete button in the modal is clicked, send the delete request
        $('#confirmDeleteTutorialButton').on('click', function () {
            if (tutorialIdToDelete) {
                // Send an AJAX request to delete the lecture
                $.ajax({
                    url: '@Url.Action("DeleteTutorial", "Admin")', // URL to send the request to
                    type: 'POST', // Use POST for delete requests
                    data: {
                        id: tutorialIdToDelete // Pass the lecture ID to the server
                    },
                    success: function (result) {
                        // Update the off-canvas content with the new partial view
                        $('#offCanvasDiv').html(result).fadeIn('slow');

                        // Call the function to update the topic navbar
                        topicNavBarUpdate();

                        // Check if current page is not the first page and only one topic is left on the current page
                        if (currentPage != 1 && topicCount == 1) {
                            // If so, load the previous page
                            loadPage(currentPage - 1);
                        }
                        else {
                            // Otherwise, reload the current page
                            loadPage(currentPage);
                        }

                        // Close the modal after successful tutorial deletion
                        $('#confirmDeleteTutorialModal').modal('hide'); // Close the modal
                    },
                    error: function (xhr, status, error) {
                        alert('An error occurred while deleting the Tutorial.'); // Show error if delete fails
                    }
                });
            }
        });

    </script>

    <script>
        // When the modal is about to be shown
        var sureModal = document.getElementById('SureModal');
        sureModal.addEventListener('show.bs.modal', function (event) {
            // Button that triggered the modal
            var button = event.relatedTarget;

            // Extract info from data-* attributes
            var projectId = button.getAttribute('data-id');
            var projectTitle = button.getAttribute('data-title');
            var projectPage = button.getAttribute('data-currentProject-page');
            var projectCount = button.getAttribute('data-ProjectCount');

            // Update the modal's content with the project title
            var modalTitleElement = sureModal.querySelector('#modalProjectTitle');
            modalTitleElement.textContent = projectTitle;

            // Dynamically set the deleteProject function for the Yes button
            var confirmDeleteButton = sureModal.querySelector('#confirmDeleteProjectButton');
            confirmDeleteButton.onclick = function () {
                deleteProject(projectId,projectPage,projectCount); // Call deleteProject with the correct project ID
            };
        });
    </script>

    <script>
        function deleteProject(projectId, projectPage, projectCount) {
            $.ajax({
                url: '/Admin/DeleteProject',
                type: 'POST',
                data: { id: projectId },
                success: function () {
                    // Check if current page is not the first page and only one project is left on the current page
                    if (projectPage != 1 && projectCount == 1)
                    {
                        // If so, load the previous page
                        loadProjectPage(projectPage - 1);
                    } 
                    else
                    {
                        // Otherwise, reload the current page
                        loadProjectPage(projectPage);
                    }

                    // Optionally, close the modal after success
                    $('#SureModal').modal('hide');
                },
                error: function () {
                    alert('An error occurred while deleting the project');
                }
            });
        }
    </script>
}